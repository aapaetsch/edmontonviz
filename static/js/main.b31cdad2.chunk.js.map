{"version":3,"sources":["logo.svg","Containers/Test.js","Containers/BusMap.js","Containers/HousingMap.js","Components/SideMenu.js","Components/TopMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","gtfsrealtime","require","request","requestSettings","method","url","encoding","app_token","header","requestTripSettings","limit","Test","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","busState","busNumbers","busData","trips","error","response","body","statusCode","feed","transit_realtime","FeedMessage","decode","entity","forEach","push","vehicle","trip","tripId","getTrips","setState","allowedTrips","tID_rID","JSON","parse","trip_id","route_id","_this2","react_default","a","createElement","es_button","className","type","shape","onClick","getContent","Component","Map","ReactMapboxGl","accessToken","BusMap","contentd","style","containerStyle","width","height","center","lib_esm","coordinates","anchor","icon","theme","prevProps","nextProps","console","log","busses","busLocations","map","item","index","id","lat","long","HousingMap","HousingMap_Map","MIG","Menu","ItemGroup","SM","SubMenu","SideMenu","menuKeys","busFiltersMenu","title","menu","Item","key","es_checkbox","onChange","testButtonsMenu","houseMenu","e","mode","openKeys","onOpenChange","disabled","bus","housing","test","MenuItemGroup","TopMenu","homeButton","showPage","edmviz","placement","TopMenu_MenuItemGroup","handleClick","Header","Layout","Content","Sider","App","next","showTest","showHome","showHouse","showBus","getBusContent","clearKeys","lastOpenKey","find","indexOf","logo","src","alt","edmontonCenter","checkedBoxes","aBus","position","latitude","longitude","speed","err","bearing","bodyContent","Containers_Test","Containers_BusMap","Containers_HousingMap","layout","zIndex","padding","background","Components_TopMenu","ref","topmenu","Components_SideMenu","sidemenu","home","margin","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b31cdad2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./test.css\";\nimport \"gtfs-realtime-bindings\";\nimport \"gtfs-rt-bindings\";\n\nconst gtfsrealtime = require('gtfs-realtime-bindings');\nconst request = require('request');\n\nconst requestSettings = {\n    method: 'GET',\n    url: 'https://cors-anywhere.herokuapp.com/https://data.edmonton.ca/download/7qed-k2fc/application%2Foctet-stream',\n    encoding: null,\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\n    header:'access-control-allow-origin'\n};\n\nconst requestTripSettings = {\n    method: 'GET',\n    url:'https://data.edmonton.ca/resource/ctwr-tvrd.json?$select=trip_id,route_id&$order=route_id ',\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\n    limit: 5000,\n}\n\nconst requestRTTripUpdates = {\n    method: 'GET',\n    url:'https://cors-anywhere.herokuapp.com/http://gtfs.edmonton.ca/TMGTFSRealTimeWebService/TripUpdate/TripUpdates.pb',\n    app_token:'rCmWZj0urjkTW2OGXJeIga9kS',\n    encoding: null,\n}\nclass Test extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            busState: {},\n            busNumbers:{},\n\n        }\n    }\n    getContent(){\n        let busData={};\n        let trips = [];\n        request(requestSettings, function(error, response, body){\n            if (!error && response.statusCode === 200){\n                var feed = gtfsrealtime.transit_realtime.FeedMessage.decode(body);\n                feed.entity.forEach(function(entity){\n                    trips.push(entity.vehicle.trip.tripId)\n                });\n                busData = feed;\n            }\n        });\n        this.getTrips(trips);\n        this.setState({busState:busData});\n    }\n\n    getTrips(allowedTrips){\n        let tID_rID = {}\n        request(requestTripSettings, function(error, response, body){\n            if (!error && response.statusCode === 200){\n                 let temp = JSON.parse(body);\n                 temp.forEach(function(entity){\n                     if(entity.trip_id in allowedTrips){\n                         tID_rID[entity.trip_id] = entity.route_id;\n                     }\n                 });\n            }\n        });\n        this.setState({busNumbers: tID_rID});\n    }\n\n    render() {\n        return(\n            <div>\n                <ul><li>\n                    <Button className=\"lol\" type='primary' shape='round' onClick={()=>{this.getContent()}}>GET GTFS</Button>\n                </li><li>\n                    <Button type='primary' shape='round' onClick={()=>{this.getTrips()}}>Trip Updates</Button>\n                </li></ul>\n            </div>\n        );\n    }\n}\nexport default Test;","import React, {Component} from 'react';\nimport { Button } from \"shards-react\";\nimport ReactDOM from 'react-dom';\nimport ReactMapboxGl, { Layer, Feature, Marker } from \"react-mapbox-gl\";\nimport { Icon } from 'antd';\n\n\nconst Map = ReactMapboxGl({\n    accessToken: 'pk.eyJ1IjoiYXBhZXRzY2giLCJhIjoiY2p3czk5ZWZyMGNzczRhbzhpdjV1NjM0YyJ9.l5Hitn6UuOWC5DoIEl5KHg'\n});\n\nconst requestSettings = {\n    method: 'GET',\n    url: 'https://cors-anywhere.herokuapp.com/https://data.edmonton.ca/download/7qed-k2fc/application%2Foctet-stream',\n    encoding: null,\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\n    header:'access-control-allow-origin'\n}\n\nconst requestTripSettings = {\n    method: 'GET',\n    url:'https://data.edmonton.ca/resource/ctwr-tvrd.json?$select=trip_id,route_id&$order=route_id ',\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\n    limit: 5000,\n}\n\nconst gtfsrealtime = require('gtfs-realtime-bindings');\nconst request = require('request');\n\nclass BusMap extends Component{\n    constructor(props){\n        super(props);\n    }\n    state = {\n        busData: []\n    }\n\n    componentWillMount(){\n        // this.tick = setInterval(this.getBusses(), 60000);\n        // setInterval(console.log('tick'), 1000);\n\n    }\n    componentDidUpdate(prevProps, nextProps){\n        console.log(prevProps.busState);\n        console.log(nextProps);\n    }\n\n    componentDidMount(){\n    }\n\n    componentWillUnmount(){\n        this.setState({busData:[]});\n    }\n\n    getBusses(){\n        let busses = this.props.getContent();\n        this.setState({busData: busses});\n    }\n    contentd = (<Map\n                    style=\"mapbox://styles/apaetsch/cjw2k3na404qn1csfznqo90z7\"\n                    containerStyle={{ width: '85vw', height: '90vh'}}\n                    center={this.props.center}>\n                    <div>\n                    <Marker coordinates={[-113.5054,53.5372]} anchor=\"bottom\"><Icon type=\"environment\" theme=\"twoTone\" /></Marker>\n                    </div>\n                </Map>)\n    render() {\n\n        const busLocations = this.state.busData.map((item, index) => {\n            return <Marker id={index} coordinates={[item.lat,item.long]}\n            anchor=\"bottom\"><Icon type=\"environment\" theme=\"twoTone\" /></Marker>\n        });\n        console.log(busLocations);\n\n\n        return (\n            <div>\n            <Map\n                    style=\"mapbox://styles/apaetsch/cjw2k3na404qn1csfznqo90z7\"\n                    containerStyle={{ width: '85vw', height: '90vh'}}\n                    center={this.props.center}>\n                    <div>\n                    <Marker coordinates={[-113.5054,53.5372]} anchor=\"bottom\"><Icon type=\"environment\" theme=\"twoTone\" /></Marker>\n                    {busLocations}\n                    </div>\n                </Map>\n\n            </div>\n        );\n        }\n    }\n\n\nexport default BusMap;\n","import React, {Component} from 'react';\nimport { Button } from \"shards-react\";\nimport ReactDOM from 'react-dom';\nimport ReactMapboxGl, { Layer, Feature, Marker } from \"react-mapbox-gl\";\nimport { Icon } from 'antd';\n\nconst Map = ReactMapboxGl({\n    accessToken: 'pk.eyJ1IjoiYXBhZXRzY2giLCJhIjoiY2p3czk5ZWZyMGNzczRhbzhpdjV1NjM0YyJ9.l5Hitn6UuOWC5DoIEl5KHg'\n});\n\nconst request = require('request');\n\nclass HousingMap extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    componentDidMount(){\n        // this.getContent();\n\n\n    }\n\n    componentWillUnmount(){\n        // clearInterval(this.state.refresh);\n        // this.setState({busState: false, busNumbers:{}, refresh: null});\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Map\n                    style=\"mapbox://styles/apaetsch/cjw2k3na404qn1csfznqo90z7\"\n                    containerStyle={{ width: '85vw', height: '90vh'}}\n                    center={this.props.center}>\n\n                </Map>\n            </div>\n        );\n        }\n    }\n\n\nexport default HousingMap;","import React, {Component} from 'react';\nimport { Menu, Icon, Button, Checkbox} from 'antd';\n\nconst MIG = Menu.ItemGroup;\nconst MenuItemGroup = Menu.ItemGroup;\nconst SM = Menu.SubMenu;\nclass SideMenu extends Component{\n    constructor(props){\n        super(props);\n    }\n    menuKeys =  [\"busfxn\"];\n\n    onChange(e){\n        console.log('checked = ${e.target.checked}');\n    }\n    busFiltersMenu = (<MIG title={<span><Icon type=\"filter\"/>Filters</span>}>\n                        <Menu.Item key='F1'>\n                            <Checkbox onChange={this.onChange}/>\n                            <span>Some function to the Bus Map</span>\n                        </Menu.Item>\n                    </MIG>);\n    testButtonsMenu = (<MIG title={<span><Icon type='control'/>Test Buttons</span>}>\n                        <Menu.Item key='T1' >\n                            <Checkbox onChange={this.onChange}/>\n                            <span>Test Checkbox</span>\n                        </Menu.Item><Menu.Item key='T2'>\n                            <span>Test Button</span>\n                        </Menu.Item>\n                    </MIG>);\n    houseMenu =(<MIG title={<span><Icon type=\"home\"/>Home Buttons</span>}>\n                    <Menu.Item key='H1'>\n                        <span>Test House</span>\n                    </Menu.Item>\n                </MIG>\n    );\n    render(){\n        return (\n            <Menu\n                mode=\"inline\"\n                openKeys={this.props.openKeys}\n                onOpenChange={this.props.onOpenChange}\n                theme=\"dark\">\n                <SM key=\"busfxn\" disabled={!this.props.bus}\n                    title={<span><Icon type='car'/><span>Bus Functions</span></span>}>\n                    {this.busFiltersMenu}\n                </SM>\n                <SM key=\"housefxn\" disabled={!this.props.housing}\n                    title={<span><Icon type='home'/><span>House Map Functions</span></span>}>\n                    {this.houseMenu}\n                </SM>\n                <SM key='testfxn' disabled={!this.props.test}\n                    title={<span><Icon type='experiment'/>Tests</span>}>\n                    {this.testButtonsMenu}\n                </SM>\n    \t    </Menu>\n        );\n    }\n}\nexport default SideMenu;","import React, { Component } from 'react';\nimport { Menu, Icon, Button, Layout, Checkbox } from 'antd';\n\nconst MenuItemGroup = Menu.ItemGroup;\nconst SubMenu = Menu.SubMenu;\nclass TopMenu extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    homeButton = (  <Menu.Item style={{width:215}} onClick={()=>{this.props.showPage('Home')}}>\n                        <span>\n                            <Icon type=\"home\" />\n                            Home\n                        </span>\n                    </Menu.Item>);\n    edmviz = (  <SubMenu key=\"viz1\" title={\n                    <span>\n                        <Icon type=\"pie-chart\" />\n                        <span>Edmonton Visulizations</span>\n                    </span>} placement='bottomleft'>\n                    <MenuItemGroup title='Bus Map Page'>\n\t\t\t\t\t\t<Menu.Item onClick={()=>{this.props.showPage('Bus')}}>\n                            <Icon type=\"global\"/> Bus Map\n                        </Menu.Item>\n                    </MenuItemGroup>\n                    <MenuItemGroup title='Housing Map Page'>\n                        <Menu.Item onClick={()=>{this.props.showPage('House')}}>\n                            <Icon type=\"home\"/>House Map\n                        </Menu.Item>\n                    </MenuItemGroup>\n                    <MenuItemGroup title='Testing'>\n                        <Menu.Item onClick={()=>{this.props.showPage('Test')}}>\n                            <Icon type='loading'/>Test\n                        </Menu.Item>\n                    </MenuItemGroup>\n                </SubMenu>);\n\n\n    render(){\n        return(\n            <Menu\n                onClick={this.handleClick}\n                mode=\"horizontal\"\n                theme=\"dark\">\n                {this.homeButton}\n                {this.edmviz}\n       \t    </Menu>\n        );\n    }\n}\nexport default TopMenu;\n\n","import React from 'react';\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";// this is needed for shards?\nimport \"shards-ui/dist/css/shards.min.css\"; //this is needed for shards?\nimport { Layout } from 'antd';\nimport Test from \"./Containers/Test\";\nimport BusMap from \"./Containers/BusMap\";\nimport HousingMap from \"./Containers/HousingMap\";\nimport SideMenu from \"./Components/SideMenu\";\nimport TopMenu from \"./Components/TopMenu\";\nimport 'antd/dist/antd.css';\n\nconst {Header, Content, Sider} = Layout;\n\n//<-----Access Settings------>\nconst requestSettings = {\n    method: 'GET',\n    url: 'https://cors-anywhere.herokuapp.com/https://data.edmonton.ca/download/7qed-k2fc/application%2Foctet-stream',\n    encoding: null,\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\n    header:'access-control-allow-origin'\n}\n\nconst requestTripSettings = {\n    method: 'GET',\n    url:'https://data.edmonton.ca/resource/ctwr-tvrd.json?$select=trip_id,route_id&$order=route_id ',\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\n    limit: 5000,\n}\n\nconst gtfsrealtime = require('gtfs-realtime-bindings');\nconst request = require('request');\n//<-------End of Access------->\n\nclass App extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n            edmontonCenter:[-113.5054,53.5372],\n\n            showTest: false,\n\t\t\tshowHome: true,\n            showBus: false,\n            showHouse:false,\n\n            openKeys: [],\n            checkedBoxes: [],\n        }\n    }\n\n    menuKeys =  [];\n\n    showPage = (next) => {\n        this.setState({ showTest:false,showHome:false, showHouse:false,showBus:false});\n        if (next === 'Test'){\n            this.setState({showTest:true});\n        } else if (next === 'Home'){\n            this.setState({showHome:true});\n        } else if (next === 'House'){\n            this.setState({showHouse:true});\n        } else if (next === 'Bus'){\n            this.getBusContent();\n            this.setState({showBus:true});\n\n        }\n\n        this.clearKeys();\n    }\n\n    clearKeys(){\n        this.setState({openKeys: []});\n    }\n\n    onOpenChange = openKeys => {\n        const lastOpenKey = openKeys.find(key => openKeys.indexOf(key) === -1);\n        if (this.menuKeys.indexOf(lastOpenKey) === -1){\n            this.setState({openKeys});\n        } else {\n            this.setState({openKeys: lastOpenKey ? [lastOpenKey] : [], })\n        }\n    }\n\n    handleClick = e => {\n        console.log('click ', e);\n    };\n\n    onChange(e){\n        console.log('checked = ${e.target.checked}');\n    }\n    //<---------------Start of Bus Methods ------------>\n    getBusContent(){\n        let busData=[];\n        // let busNumbers = this.getBusTrips();\n        // console.log(busNumbers);\n        request(requestSettings, function(error, response, body){\n            if (!error && response.statusCode === 200){\n                var feed = gtfsrealtime.transit_realtime.FeedMessage.decode(body);\n                feed.entity.forEach(function(entity){\n                    let aBus = {};\n\n                    aBus['id'] = entity.id;\n                    aBus['tripId'] = entity.vehicle.trip.tripId;\n                    aBus['lat'] = entity.vehicle.position.latitude;\n                    aBus['long'] = entity.vehicle.position.longitude;\n\n                    try{aBus['speed'] = entity.vehicle.position.speed}\n                    catch(err){aBus['speed'] = 0}\n\n                    try{aBus['bearing'] = entity.vehicle.position.bearing}\n                    catch(err){aBus['bearing'] = null}\n\n                    // try{aBus['number'] = busNumbers[entity.vehicle.trip.tripId.toString()]}\n                    // catch(err){aBus['number'] = null}\n\n                    busData.push(aBus);\n                });\n            }\n        });\n        console.log('here is the edited data', busData);\n        return busData;\n    }\n\n    getBusTrips(){\n        let tID_rID = {}\n        request(requestTripSettings, function(error, response, body){\n            if (!error && response.statusCode === 200){\n                 let temp = JSON.parse(body);\n                 temp.forEach(function(entity){\n\n                    tID_rID[entity.trip_id] = entity.route_id;\n\n                 });\n            }\n        });\n        return tID_rID;\n    }\n    //<--------------------End of Bus Content--------------------->\n    logo = (\n        <div className='logoStyle'>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </div>\n    );\n\n    render(e){\n        let bodyContent;\n\n\t\tif (!this.state.showHome){\n      \t\tif (this.state.showTest){\n           \t\tbodyContent = <Test showPage={this.showPage}/>;\n       \t\t} else if (this.state.showBus){\n                   bodyContent = <BusMap\n                                    center={this.state.edmontonCenter}\n                                    getContent={this.getBusContent}\n                                    />\n               } else if (this.state.showHouse){\n                   bodyContent = <HousingMap />\n               }\n\t\t}else if (this.state.showHome){\n           \tbodyContent = this.logo;\n       \t}\n        return(\n                <Layout>\n                    <Header style={{ position: 'fixed', zIndex: 1, width: '100%', padding: '0px',\n                                     background:'#282c34', height:0}}>\n                        <TopMenu ref={this.topmenu}\n\t\t\t\t\t\t\tshowPage={this.showPage}\n                                />\n                    </Header>\n                    <Layout>\n                        <Sider className='sm'>\n                            <SideMenu\n                                ref={this.sidemenu}\n                                home={this.state.showHome}\n                                bus={this.state.showBus}\n                                test={this.state.showTest}\n                                housing={this.state.showHouse}\n                                openKeys={this.state.openKeys}\n                                onOpenChange={this.onOpenChange}\n                                />\n                        </Sider>\n                    <Content style={{background: '#282c34',padding: \"15px\", margin: \"45px 0 0 0\", minHeight: '100vh',}}>\n                            {bodyContent}\n                    </Content>\n                    </Layout>\n                </Layout>\n            );\n        }\n    }\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}