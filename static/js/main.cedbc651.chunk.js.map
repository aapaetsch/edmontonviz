{"version":3,"sources":["logo.svg","Containers/Test.js","Containers/BusMap.js","Containers/HousingMap.js","Components/SideMenu.js","Components/TopMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","gtfsrealtime","require","request","requestSettings","method","url","encoding","app_token","header","requestTripSettings","limit","Test","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","busState","busNumbers","busData","trips","error","response","body","statusCode","feed","transit_realtime","FeedMessage","decode","entity","forEach","push","vehicle","trip","tripId","getTrips","setState","allowedTrips","tID_rID","JSON","parse","trip_id","route_id","_this2","react_default","a","createElement","es_button","className","type","shape","onClick","getContent","Component","Map","ReactMapboxGl","accessToken","BusMap","contentd","style","containerStyle","width","height","center","lib_esm","coordinates","anchor","icon","theme","prevProps","nextProps","console","log","busses","busLocations","map","item","index","id","lat","long","HousingMap","HousingMap_Map","MIG","Menu","ItemGroup","SM","SubMenu","SideMenu","menuKeys","busFiltersMenu","title","menu","Item","key","es_checkbox","onChange","testButtonsMenu","houseMenu","e","mode","openKeys","onOpenChange","disabled","bus","housing","test","MenuItemGroup","TopMenu","homeButton","showPage","edmviz","placement","TopMenu_MenuItemGroup","handleClick","Header","Layout","Content","Sider","App","next","showTest","showHome","showHouse","showBus","getBusContent","clearKeys","lastOpenKey","find","indexOf","logo","src","alt","edmontonCenter","checkedBoxes","aBus","position","latitude","longitude","speed","err","bearing","bodyContent","Containers_Test","Containers_BusMap","Containers_HousingMap","layout","zIndex","padding","background","Components_TopMenu","ref","topmenu","Components_SideMenu","sidemenu","home","margin","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cedbc651.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport \"./test.css\";\r\nimport \"gtfs-realtime-bindings\";\r\nimport \"gtfs-rt-bindings\";\r\n\r\nconst gtfsrealtime = require('gtfs-realtime-bindings');\r\nconst request = require('request');\r\n\r\nconst requestSettings = {\r\n    method: 'GET',\r\n    url: 'https://cors-anywhere.herokuapp.com/https://data.edmonton.ca/download/7qed-k2fc/application%2Foctet-stream',\r\n    encoding: null,\r\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\r\n    header:'access-control-allow-origin'\r\n};\r\n\r\nconst requestTripSettings = {\r\n    method: 'GET',\r\n    url:'https://data.edmonton.ca/resource/ctwr-tvrd.json?$select=trip_id,route_id&$order=route_id ',\r\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\r\n    limit: 5000,\r\n}\r\n\r\nconst requestRTTripUpdates = {\r\n    method: 'GET',\r\n    url:'https://cors-anywhere.herokuapp.com/http://gtfs.edmonton.ca/TMGTFSRealTimeWebService/TripUpdate/TripUpdates.pb',\r\n    app_token:'rCmWZj0urjkTW2OGXJeIga9kS',\r\n    encoding: null,\r\n}\r\nclass Test extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            busState: {},\r\n            busNumbers:{},\r\n\r\n        }\r\n    }\r\n    getContent(){\r\n        let busData={};\r\n        let trips = [];\r\n        request(requestSettings, function(error, response, body){\r\n            if (!error && response.statusCode === 200){\r\n                var feed = gtfsrealtime.transit_realtime.FeedMessage.decode(body);\r\n                feed.entity.forEach(function(entity){\r\n                    trips.push(entity.vehicle.trip.tripId)\r\n                });\r\n                busData = feed;\r\n            }\r\n        });\r\n        this.getTrips(trips);\r\n        this.setState({busState:busData});\r\n    }\r\n\r\n    getTrips(allowedTrips){\r\n        let tID_rID = {}\r\n        request(requestTripSettings, function(error, response, body){\r\n            if (!error && response.statusCode === 200){\r\n                 let temp = JSON.parse(body);\r\n                 temp.forEach(function(entity){\r\n                     if(entity.trip_id in allowedTrips){\r\n                         tID_rID[entity.trip_id] = entity.route_id;\r\n                     }\r\n                 });\r\n            }\r\n        });\r\n        this.setState({busNumbers: tID_rID});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <ul><li>\r\n                    <Button className=\"lol\" type='primary' shape='round' onClick={()=>{this.getContent()}}>GET GTFS</Button>\r\n                </li><li>\r\n                    <Button type='primary' shape='round' onClick={()=>{this.getTrips()}}>Trip Updates</Button>\r\n                </li></ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Test;","import React, {Component} from 'react';\r\nimport { Button } from \"shards-react\";\r\nimport ReactDOM from 'react-dom';\r\nimport ReactMapboxGl, { Layer, Feature, Marker } from \"react-mapbox-gl\";\r\nimport { Icon } from 'antd';\r\n\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken: 'pk.eyJ1IjoiYXBhZXRzY2giLCJhIjoiY2p3czk5ZWZyMGNzczRhbzhpdjV1NjM0YyJ9.l5Hitn6UuOWC5DoIEl5KHg'\r\n});\r\n\r\nconst requestSettings = {\r\n    method: 'GET',\r\n    url: 'https://cors-anywhere.herokuapp.com/https://data.edmonton.ca/download/7qed-k2fc/application%2Foctet-stream',\r\n    encoding: null,\r\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\r\n    header:'access-control-allow-origin'\r\n}\r\n\r\nconst requestTripSettings = {\r\n    method: 'GET',\r\n    url:'https://data.edmonton.ca/resource/ctwr-tvrd.json?$select=trip_id,route_id&$order=route_id ',\r\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\r\n    limit: 5000,\r\n}\r\n\r\nconst gtfsrealtime = require('gtfs-realtime-bindings');\r\nconst request = require('request');\r\n\r\nclass BusMap extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    state = {\r\n        busData: []\r\n    }\r\n\r\n    componentWillMount(){\r\n        // this.tick = setInterval(this.getBusses(), 60000);\r\n        // setInterval(console.log('tick'), 1000);\r\n\r\n    }\r\n    componentDidUpdate(prevProps, nextProps){\r\n        console.log(prevProps.busState);\r\n        console.log(nextProps);\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.setState({busData:[]});\r\n    }\r\n\r\n    getBusses(){\r\n        let busses = this.props.getContent();\r\n        this.setState({busData: busses});\r\n    }\r\n    contentd = (<Map\r\n                    style=\"mapbox://styles/apaetsch/cjw2k3na404qn1csfznqo90z7\"\r\n                    containerStyle={{ width: '85vw', height: '90vh'}}\r\n                    center={this.props.center}>\r\n                    <div>\r\n                    <Marker coordinates={[-113.5054,53.5372]} anchor=\"bottom\"><Icon type=\"environment\" theme=\"twoTone\" /></Marker>\r\n                    </div>\r\n                </Map>)\r\n    render() {\r\n\r\n        const busLocations = this.state.busData.map((item, index) => {\r\n            return <Marker id={index} coordinates={[item.lat,item.long]}\r\n            anchor=\"bottom\"><Icon type=\"environment\" theme=\"twoTone\" /></Marker>\r\n        });\r\n        console.log(busLocations);\r\n\r\n\r\n        return (\r\n            <div>\r\n            <Map\r\n                    style=\"mapbox://styles/apaetsch/cjw2k3na404qn1csfznqo90z7\"\r\n                    containerStyle={{ width: '85vw', height: '90vh'}}\r\n                    center={this.props.center}>\r\n                    <div>\r\n                    <Marker coordinates={[-113.5054,53.5372]} anchor=\"bottom\"><Icon type=\"environment\" theme=\"twoTone\" /></Marker>\r\n                    {busLocations}\r\n                    </div>\r\n                </Map>\r\n\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\n\r\nexport default BusMap;\r\n","import React, {Component} from 'react';\r\nimport { Button } from \"shards-react\";\r\nimport ReactDOM from 'react-dom';\r\nimport ReactMapboxGl, { Layer, Feature, Marker } from \"react-mapbox-gl\";\r\nimport { Icon } from 'antd';\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken: 'pk.eyJ1IjoiYXBhZXRzY2giLCJhIjoiY2p3czk5ZWZyMGNzczRhbzhpdjV1NjM0YyJ9.l5Hitn6UuOWC5DoIEl5KHg'\r\n});\r\n\r\nconst request = require('request');\r\n\r\nclass HousingMap extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        // this.getContent();\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // clearInterval(this.state.refresh);\r\n        // this.setState({busState: false, busNumbers:{}, refresh: null});\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Map\r\n                    style=\"mapbox://styles/apaetsch/cjw2k3na404qn1csfznqo90z7\"\r\n                    containerStyle={{ width: '85vw', height: '90vh'}}\r\n                    center={this.props.center}>\r\n\r\n                </Map>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\n\r\nexport default HousingMap;","import React, {Component} from 'react';\r\nimport { Menu, Icon, Button, Checkbox} from 'antd';\r\n\r\nconst MIG = Menu.ItemGroup;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nconst SM = Menu.SubMenu;\r\nclass SideMenu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    menuKeys =  [\"busfxn\"];\r\n\r\n    onChange(e){\r\n        console.log('checked = ${e.target.checked}');\r\n    }\r\n    busFiltersMenu = (<MIG title={<span><Icon type=\"filter\"/>Filters</span>}>\r\n                        <Menu.Item key='F1'>\r\n                            <Checkbox onChange={this.onChange}/>\r\n                            <span>Some function to the Bus Map</span>\r\n                        </Menu.Item>\r\n                    </MIG>);\r\n    testButtonsMenu = (<MIG title={<span><Icon type='control'/>Test Buttons</span>}>\r\n                        <Menu.Item key='T1' >\r\n                            <Checkbox onChange={this.onChange}/>\r\n                            <span>Test Checkbox</span>\r\n                        </Menu.Item><Menu.Item key='T2'>\r\n                            <span>Test Button</span>\r\n                        </Menu.Item>\r\n                    </MIG>);\r\n    houseMenu =(<MIG title={<span><Icon type=\"home\"/>Home Buttons</span>}>\r\n                    <Menu.Item key='H1'>\r\n                        <span>Test House</span>\r\n                    </Menu.Item>\r\n                </MIG>\r\n    );\r\n    render(){\r\n        return (\r\n            <Menu\r\n                mode=\"inline\"\r\n                openKeys={this.props.openKeys}\r\n                onOpenChange={this.props.onOpenChange}\r\n                theme=\"dark\">\r\n                <SM key=\"busfxn\" disabled={!this.props.bus}\r\n                    title={<span><Icon type='car'/><span>Bus Functions</span></span>}>\r\n                    {this.busFiltersMenu}\r\n                </SM>\r\n                <SM key=\"housefxn\" disabled={!this.props.housing}\r\n                    title={<span><Icon type='home'/><span>House Map Functions</span></span>}>\r\n                    {this.houseMenu}\r\n                </SM>\r\n                <SM key='testfxn' disabled={!this.props.test}\r\n                    title={<span><Icon type='experiment'/>Tests</span>}>\r\n                    {this.testButtonsMenu}\r\n                </SM>\r\n    \t    </Menu>\r\n        );\r\n    }\r\n}\r\nexport default SideMenu;","import React, { Component } from 'react';\r\nimport { Menu, Icon, Button, Layout, Checkbox } from 'antd';\r\n\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nconst SubMenu = Menu.SubMenu;\r\nclass TopMenu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    homeButton = (  <Menu.Item style={{width:215}} onClick={()=>{this.props.showPage('Home')}}>\r\n                        <span>\r\n                            <Icon type=\"home\" />\r\n                            Home\r\n                        </span>\r\n                    </Menu.Item>);\r\n    edmviz = (  <SubMenu key=\"viz1\" title={\r\n                    <span>\r\n                        <Icon type=\"pie-chart\" />\r\n                        <span>Edmonton Visulizations</span>\r\n                    </span>} placement='bottomleft'>\r\n                    <MenuItemGroup title='Bus Map Page'>\r\n\t\t\t\t\t\t<Menu.Item onClick={()=>{this.props.showPage('Bus')}}>\r\n                            <Icon type=\"global\"/> Bus Map\r\n                        </Menu.Item>\r\n                    </MenuItemGroup>\r\n                    <MenuItemGroup title='Housing Map Page'>\r\n                        <Menu.Item onClick={()=>{this.props.showPage('House')}}>\r\n                            <Icon type=\"home\"/>House Map\r\n                        </Menu.Item>\r\n                    </MenuItemGroup>\r\n                    <MenuItemGroup title='Testing'>\r\n                        <Menu.Item onClick={()=>{this.props.showPage('Test')}}>\r\n                            <Icon type='loading'/>Test\r\n                        </Menu.Item>\r\n                    </MenuItemGroup>\r\n                </SubMenu>);\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Menu\r\n                onClick={this.handleClick}\r\n                mode=\"horizontal\"\r\n                theme=\"dark\">\r\n                {this.homeButton}\r\n                {this.edmviz}\r\n       \t    </Menu>\r\n        );\r\n    }\r\n}\r\nexport default TopMenu;\r\n\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";// this is needed for shards?\r\n//import \"shards-ui/dist/css/shards.min.css\"; //this is needed for shards?\r\nimport { Layout } from 'antd';\r\nimport Test from \"./Containers/Test\";\r\nimport BusMap from \"./Containers/BusMap\";\r\nimport HousingMap from \"./Containers/HousingMap\";\r\nimport SideMenu from \"./Components/SideMenu\";\r\nimport TopMenu from \"./Components/TopMenu\";\r\nimport 'antd/dist/antd.css';\r\n\r\nconst {Header, Content, Sider} = Layout;\r\n\r\n//<-----Access Settings------>\r\nconst requestSettings = {\r\n    method: 'GET',\r\n    url: 'https://cors-anywhere.herokuapp.com/https://data.edmonton.ca/download/7qed-k2fc/application%2Foctet-stream',\r\n    encoding: null,\r\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\r\n    header:'access-control-allow-origin'\r\n}\r\n\r\nconst requestTripSettings = {\r\n    method: 'GET',\r\n    url:'https://data.edmonton.ca/resource/ctwr-tvrd.json?$select=trip_id,route_id&$order=route_id ',\r\n    app_token: 'rCmWZj0urjkTW2OGXJeIga9kS',\r\n    limit: 5000,\r\n}\r\n\r\nconst gtfsrealtime = require('gtfs-realtime-bindings');\r\nconst request = require('request');\r\n//<-------End of Access------->\r\n\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n            edmontonCenter:[-113.5054,53.5372],\r\n\r\n            showTest: false,\r\n\t\t\tshowHome: true,\r\n            showBus: false,\r\n            showHouse:false,\r\n\r\n            openKeys: [],\r\n            checkedBoxes: [],\r\n        }\r\n    }\r\n\r\n    menuKeys =  [];\r\n\r\n    showPage = (next) => {\r\n        this.setState({ showTest:false,showHome:false, showHouse:false,showBus:false});\r\n        if (next === 'Test'){\r\n            this.setState({showTest:true});\r\n        } else if (next === 'Home'){\r\n            this.setState({showHome:true});\r\n        } else if (next === 'House'){\r\n            this.setState({showHouse:true});\r\n        } else if (next === 'Bus'){\r\n            this.getBusContent();\r\n            this.setState({showBus:true});\r\n\r\n        }\r\n\r\n        this.clearKeys();\r\n    }\r\n\r\n    clearKeys(){\r\n        this.setState({openKeys: []});\r\n    }\r\n\r\n    onOpenChange = openKeys => {\r\n        const lastOpenKey = openKeys.find(key => openKeys.indexOf(key) === -1);\r\n        if (this.menuKeys.indexOf(lastOpenKey) === -1){\r\n            this.setState({openKeys});\r\n        } else {\r\n            this.setState({openKeys: lastOpenKey ? [lastOpenKey] : [], })\r\n        }\r\n    }\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n    };\r\n\r\n    onChange(e){\r\n        console.log('checked = ${e.target.checked}');\r\n    }\r\n    //<---------------Start of Bus Methods ------------>\r\n    getBusContent(){\r\n        let busData=[];\r\n        // let busNumbers = this.getBusTrips();\r\n        // console.log(busNumbers);\r\n        request(requestSettings, function(error, response, body){\r\n            if (!error && response.statusCode === 200){\r\n                var feed = gtfsrealtime.transit_realtime.FeedMessage.decode(body);\r\n                feed.entity.forEach(function(entity){\r\n                    let aBus = {};\r\n\r\n                    aBus['id'] = entity.id;\r\n                    aBus['tripId'] = entity.vehicle.trip.tripId;\r\n                    aBus['lat'] = entity.vehicle.position.latitude;\r\n                    aBus['long'] = entity.vehicle.position.longitude;\r\n\r\n                    try{aBus['speed'] = entity.vehicle.position.speed}\r\n                    catch(err){aBus['speed'] = 0}\r\n\r\n                    try{aBus['bearing'] = entity.vehicle.position.bearing}\r\n                    catch(err){aBus['bearing'] = null}\r\n\r\n                    // try{aBus['number'] = busNumbers[entity.vehicle.trip.tripId.toString()]}\r\n                    // catch(err){aBus['number'] = null}\r\n\r\n                    busData.push(aBus);\r\n                });\r\n            }\r\n        });\r\n        console.log('here is the edited data', busData);\r\n        return busData;\r\n    }\r\n\r\n    getBusTrips(){\r\n        let tID_rID = {}\r\n        request(requestTripSettings, function(error, response, body){\r\n            if (!error && response.statusCode === 200){\r\n                 let temp = JSON.parse(body);\r\n                 temp.forEach(function(entity){\r\n\r\n                    tID_rID[entity.trip_id] = entity.route_id;\r\n\r\n                 });\r\n            }\r\n        });\r\n        return tID_rID;\r\n    }\r\n    //<--------------------End of Bus Content--------------------->\r\n    logo = (\r\n        <div className='logoStyle'>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </div>\r\n    );\r\n\r\n    render(e){\r\n        let bodyContent;\r\n\r\n\t\tif (!this.state.showHome){\r\n      \t\tif (this.state.showTest){\r\n           \t\tbodyContent = <Test showPage={this.showPage}/>;\r\n       \t\t} else if (this.state.showBus){\r\n                   bodyContent = <BusMap\r\n                                    center={this.state.edmontonCenter}\r\n                                    getContent={this.getBusContent}\r\n                                    />\r\n               } else if (this.state.showHouse){\r\n                   bodyContent = <HousingMap />\r\n               }\r\n\t\t}else if (this.state.showHome){\r\n           \tbodyContent = this.logo;\r\n       \t}\r\n        return(\r\n                <Layout>\r\n                    <Header style={{ position: 'fixed', zIndex: 1, width: '100%', padding: '0px',\r\n                                     background:'#282c34', height:0}}>\r\n                        <TopMenu ref={this.topmenu}\r\n\t\t\t\t\t\t\tshowPage={this.showPage}\r\n                                />\r\n                    </Header>\r\n                    <Layout>\r\n                        <Sider className='sm'>\r\n                            <SideMenu\r\n                                ref={this.sidemenu}\r\n                                home={this.state.showHome}\r\n                                bus={this.state.showBus}\r\n                                test={this.state.showTest}\r\n                                housing={this.state.showHouse}\r\n                                openKeys={this.state.openKeys}\r\n                                onOpenChange={this.onOpenChange}\r\n                                />\r\n                        </Sider>\r\n                    <Content style={{background: '#282c34',padding: \"15px\", margin: \"45px 0 0 0\", minHeight: '100vh',}}>\r\n                            {bodyContent}\r\n                    </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            );\r\n        }\r\n    }\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}